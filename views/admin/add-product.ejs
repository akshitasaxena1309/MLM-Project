<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Add Product</title>
  <link rel="stylesheet" href="/css/admin/styles.css" />
  <link rel="stylesheet" href="/css/admin/add-product.css" />
  <link rel="stylesheet" href="/css/common.css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
  <style>
    .btn-class {
      background-color: #47754b;
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
      margin-bottom: 10px;
    }

    .btn-class:hover {
      background-color: #345a38;
    }

    #imageGalleryModal {
  max-height: 500px; /* Set the desired height for the gallery */
  overflow-y: auto;/* Add a vertical scrollbar if the content overflows */
}

.scrollable-gallery img {
  max-width: 100%; /* Ensure images don't exceed the container width */
  height: auto; /* Maintain the aspect ratio of the images */
  margin: 5px; /* Add margin between images */
}
.btn{
  border: 1px solid green;
}
  </style>
</head>

<body>
  <header>
    <h1>Add Product</h1>
  </header>

  <main>
    <%- partial('nav') %>

      <section class="bg">
        <form action="/admin/products/add" method="post">
          <div class="row mb-5 bg">
            <div class="col-lg-12">
              <div class="card shadow">
                <div class="card-header font-weight-bold">
                  Product Basic Information
                </div>
                <div class="card-body">
                  <div class="form-group row">
                    <div class="col-md-2">
                      <label for="title" class="font-weight-bold">Product Title<strong class="text-danger">*</strong>
                      </label>
                    </div>
                    <div class="col-md-10">
                      <input type="text" class="form-control" name="title" id="title" required />
                    </div>
                  </div>

                  <div class="form-group row">
                    <div class="col-md-2">
                      <label for="category" class="font-weight-bold">Categories <strong class="text-danger">*</strong>
                      </label>
                    </div>
                    <div class="col-md-10">
                      <select name="category" id="category">
                        <option disabled>Please Select One</option>
                        <% for(const c of categories){%>
                          <option value="<%=c._id%>">
                            <%=c.name%>
                          </option>
                          <%}%>
                      </select>
                    </div>
                  </div>

                  <div class="form-group row">
                    <div class="col-md-2">
                      <label for="stockQuantity" class="font-weight-bold">Stock Quantity <strong
                          class="text-danger">*</strong>
                      </label>
                    </div>
                    <div class="col-md-10">
                      <input type="Number" class="form-control" value="" name="stockQuantity" id="stockQuantity"
                        required />
                    </div>
                  </div>

                  <div class="form-group row">
                    <div class="col-md-2">
                      <label for="mrp" class="font-weight-bold">MRP (Maximum Retail Price)</label>
                    </div>
                    <div class="col-md-10">
                      <input type="number" class="form-control" value="" step="0.01" name="mrp" id="mrp" required />
                    </div>
                  </div>

                  <div class="form-group row">
                    <div class="col-md-2">
                      <label for="bv" class="font-weight-bold">BV (Business Volume):</label>
                    </div>
                    <div class="col-md-10">
                      <input type="number" class="form-control" step="0.01" id="bv" name="bv" required />
                    </div>
                  </div>

                  <div class="form-group row">
                    <div class="col-md-2">
                      <label for="dp" class="font-weight-bold">DP (Distributor Price):</label>
                    </div>
                    <div class="col-md-10">
                      <input type="number" class="form-control" step="0.01" id="dp" name="dp" required />
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="col-lg-12 mt-5">
              <div class="card shadow">
                <div class="card-header font-weight-bold bg--primary">
                  Product Description
                </div>
                <div class="card-body">
                  <div class="form-group row">
                    <div class="col-md-2">
                      <label for="description" class="font-weight-bold">Product Discription<strong
                          class="text-danger">*</strong>
                      </label>
                    </div>
                    <div class="col-md-10">
                      <textarea id="my-textarea description" class="form-control nicEdit" name="description"
                        id="description" rows="3" required>
                      description </textarea>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-lg-12 mt-5">
              <div class="card shadow">
                <div for="img" class="card-header font-weight-bold bg--primary">
                  Product Image
                </div>
                <div class="card-body">
                  <div class="form-group row">
                    <div class="col-md-2">
                      <label for="img" class="font-weight-bold">
                        Product Image:<strong class="text-danger">*</strong>
                      </label>
                    </div>
                    <div class="col-md-10">
                      <input type="hidden" class="form-control" name="img" id="img" placeholder="Click to select images"
                         required />
                        <div class="btn" onclick="openImageGallery()">add</div>
                        <div id="imageGallery1" style="display: flex; flex-wrap: wrap;"></div>
                      <small class="form-text text-muted">
                        Click on the add to select images from the gallery.
                      </small>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          </div>
          </div>
          <button type="submit" class="btn-class">Add Product</button>
        </form>
      </section>
   <!-- Image Gallery Modal -->
   <div id="imageGalleryModal" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Image Gallery</h4>
                <button type="button" class="close" data-dismiss="modal"
                    onclick="closeImageGallery()">&times;</button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <!-- Input for uploading multiple images -->
                <input type="file" id="imageUploader" accept="image/*" multiple>

                <!-- Display uploaded images here -->
                <div id="uploadedImages"></div>
                <div id="imageGallery" style="display: flex; flex-wrap: wrap;"></div>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeImageGallery()">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript to handle the image selection -->
<script>
   function openImageGallery() {
        // Open the image gallery modal
        document.getElementById('imageGalleryModal').style.display = 'block';
        getimg();
    }

    function closeImageGallery() {
        // Close the image gallery modal
        const uploadedImagesContainer = document.getElementById('uploadedImages');
        document.getElementById('imageGalleryModal').style.display = 'none';
        uploadedImagesContainer.innerHTML = '';
    }

    document.getElementById('imageUploader').addEventListener('change', function (event) {
            const uploadedImagesContainer = document.getElementById('uploadedImages');
            const fileInput = event.target;

            if (fileInput.files.length > 0) {
                const file = fileInput.files[0];
                const formData = new FormData();

                formData.append('image', file);

                fetch('/upload', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                  uploadedImagesContainer.innerHTML = '';
                  getimg();
                })
                .catch(error => console.error('Error:', error));
            }
        });
         
       async function getimg(){
          try {
         
         // Fetch images from the server
         const response = await fetch('/getImages');
         const images = await response.json();
         const uploadedImagesContainer = document.getElementById('uploadedImages');
         const reversedImages = images.reverse();
         // Display the images in the gallery
         reversedImages.forEach(image => {
                const imgElement = document.createElement('img');
                imgElement.src = image.path;
                imgElement.alt = image.filename;
                imgElement.style.maxWidth = '200px';
                imgElement.style.margin = '5px';

                // Add a click event listener to each image
                imgElement.addEventListener('click', function () {
                    // Call your custom function when an image is clicked
                    handleImageClick(image.path);
                });

             uploadedImagesContainer.appendChild(imgElement);
         });
     } catch (error) {
         console.error('Error fetching images:', error);
     }
        };

        function handleImageClick(path) {
    const imgInput = document.getElementById('img');
    const uploadedImagesContainer = document.getElementById('imageGallery1');
    
    // Check if the image is already in the gallery
    if (!isImageInGallery(path, uploadedImagesContainer)) {
        const imgElement = document.createElement('img');
        imgElement.src = path;
        imgElement.style.maxWidth = '200px';
        imgElement.style.margin = '5px';

        // Add a click event listener to each image for removal
        imgElement.addEventListener('click', function () {
            removeImage(path, imgElement, uploadedImagesContainer, imgInput);
        });

        uploadedImagesContainer.appendChild(imgElement);

        // Check if the input already has a value
        if (imgInput.value) {
            // If the input already has a value, append the new path with a comma
            imgInput.value += ',' + path;
        } else {
            // If the input is empty, set the value to the new path
            imgInput.value = path;
        }

        console.log(path);
    }
}

function removeImage(path, imgElement, container, imgInput) {
    // Remove the image element from the gallery
    container.removeChild(imgElement);

    // Update the input box by removing the path
    const currentPaths = imgInput.value.split(',');
    const newPathArray = currentPaths.filter((currentPath) => currentPath !== path);
    imgInput.value = newPathArray.join(',');
}

function isImageInGallery(path, container) {
    // Check if the image is already in the gallery
    const images = container.getElementsByTagName('img');
    for (const img of images) {
        if (img.src === path) {
            return true;
        }
    }
    return false;
}


        
</script>
  </main>
</body>

</html>